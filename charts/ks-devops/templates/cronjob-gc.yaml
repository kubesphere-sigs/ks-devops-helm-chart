apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ include "ks-devops.fullname" . }}
  labels:
    app: devops-pipelinerun-gcjobs
spec:
  concurrencyPolicy: {{ .Values.gcJobs.concurrencyPolicy }}
  failedJobsHistoryLimit: {{ .Values.gcJobs.failedJobsHistoryLimit }}
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: {{ include "ks-devops.fullname" . }}
            release: {{ .Release.Name }}
{{- if .Values.gcJobs.podAnnotations }}
          annotations:
{{ toYaml .Values.gcJobs.podAnnotations | indent 12 }}
{{- end }}
        spec:
          containers:
            - command:
                - ks
                - pip
                - gc
              image: "{{ .Values.image.registry }}/{{ .Values.image.tools.repository }}:{{ .Values.image.tools.tag }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              args:
                - "--max-count={{ .Values.gcJobs.maxCount }}"
                - "--max-age={{ .Values.gcJobs.maxAge }}"
                - "--condition=ignoreTime"
              name: "pipeline-run-gc"
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          serviceAccountName: {{ include "ks-devops.serviceAccountName" . }}
  successfulJobsHistoryLimit: {{ .Values.gcJobs.successfulJobsHistoryLimit }}
  schedule: {{ .Values.gcJobs.schedule | quote }}
  startingDeadlineSeconds: 4000
  suspend: false
